<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/sato/kitani_ws/src/sne_rollover_recovery/tracked_robot/tracked_description/urdf/gazebo/tracked.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Revolute-Revolute Manipulator -->
<robot name="tracked" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Constants for robot dimensions -->
  <!-- flipper mass -->
  <!-- main mass -->
  <!-- motor1 mass -->
  <!-- motor2 mass -->
  <!-- motor3 mass -->
  <!-- motor4 mass -->
  <!-- l2 mass -->
  <!-- l3 mass -->
  <!-- flipper height -->
  <!-- flipper depth -->
  <!-- flipper width -->
  <!-- flipper axis width -->
  <!-- main height -->
  <!-- main depth -->
  <!-- main width -->
  <!-- main axis width -->
  <!-- l1 -->
  <!-- link2 length -->
  <!-- link3 length -->
  <!-- motor height -->
  <!-- Square dimensions (widthxwidth) of beams -->
  <!-- Link 1 -->
  <!-- Link 2 -->
  <!-- Link 3 -->
  <!-- arbitrary value for mass -->
  <!-- velocity limit of arm motor -->
  <!-- effort limit of arm motor -->
  <!-- velocity limit of flipper motor -->
  <!-- effort limit of flipper motor -->
  <!-- Size of square 'camera' box -->
  <!-- Space btw top of beam and the each joint -->
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/tracked</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <gazebo reference="FL">
    <!--    <selfCollide>true</selfCollide>-->
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="FR">
    <!--    <selfCollide>true</selfCollide>-->
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="RL">
    <!--    <selfCollide>true</selfCollide>-->
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="RR">
    <!--    <selfCollide>true</selfCollide>-->
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="base">
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="link2">
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="link3">
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="m1">
    <mu1>0.8</mu1>
    <mu2>0.5</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="wheel_right_front">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="wheel_right_rear">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="wheel_left_front">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <gazebo reference="wheel_left_rear">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="camera1">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="camera2">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor name="head_hokuyo_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/tracked/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera1_optical">
    <sensor name="camera1_optical" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>tracked/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera1_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera2_optical">
    <sensor name="camera2_optical" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>tracked/camera2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera1_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Import Rviz colors -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- arm xacro files-->
  <!--You can import one of them-->
  <!--  <xacro:include filename="$(find tracked_description)/urdf/gazebo/tracked_arm_continuous_position.xacro" />-->
  <joint name="base2m1" type="revolute">
    <parent link="base"/>
    <child link="m1"/>
    <origin rpy="0 0 3.14159265359" xyz="0 0 0.05"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-3.14159265359" upper="3.14159265359" velocity="3"/>
    <dynamics damping="0.7"/>
  </joint>
  <link name="m1">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/motor_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/motor_a.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <mass value="0.2"/>
      <inertia ixx="0.000907922" ixy="0.0" ixz="0.0" iyy="0.007360669" iyz="0.0" izz="0.006719413"/>
    </inertial>
  </link>
  <joint name="joint1" type="revolute">
    <parent link="m1"/>
    <child link="link2"/>
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
    <axis xyz="0 -1 0"/>
    <limit effort="1000000" lower="-3.14159265359" upper="3.14159265359" velocity="3"/>
    <dynamics damping="0.7"/>
  </joint>
  <!-- Middle Link -->
  <link name="link2">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.05 0.05 0.3"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.05 0.05 0.3"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <mass value="0.8"/>
      <inertia ixx="0.00616666666667" ixy="0.0" ixz="0.0" iyy="0.00616666666667" iyz="0.0" izz="0.000333333333333"/>
    </inertial>
  </link>
  <joint name="joint2" type="revolute">
    <parent link="link2"/>
    <child link="link3"/>
    <origin rpy="0 0 0" xyz="0 0 0.3"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000000" lower="-3.14159265359" upper="3.14159265359" velocity="3"/>
    <dynamics damping="0.7"/>
  </joint>
  <!-- Top Link -->
  <link name="link3">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.05 0.05 0.3"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.05 0.05 0.3"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <mass value="0.3"/>
      <inertia ixx="0.00616666666667" ixy="0.0" ixz="0.0" iyy="0.00616666666667" iyz="0.0" izz="0.000333333333333"/>
    </inertial>
  </link>
  <joint name="link3_2camera2" type="fixed">
    <parent link="link3"/>
    <child link="camera2"/>
    <origin rpy="3.14159265359 1.57079632679 3.14159265359" xyz="0.05 0 0.3"/>
  </joint>
  <link name="camera2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <joint name="link3_2camera1" type="fixed">
    <origin rpy="3.14159265359 1.57079632679 3.14159265359" xyz="0.05 0 0"/>
    <parent link="link3"/>
    <child link="camera1"/>
  </joint>
  <!-- Camera -->
  <link name="camera1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera1_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="0.0 0.0 3.14159265359" xyz="0 0 0"/>
    <parent link="camera1"/>
    <child link="camera1_optical"/>
  </joint>
  <link name="camera1_optical">
  </link>
  <joint name="camera2_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="0.0 0.0 3.14159265359" xyz="0 0 0"/>
    <parent link="camera2"/>
    <child link="camera2_optical"/>
  </joint>
  <link name="camera2_optical">
  </link>
  <transmission name="tran_base2m1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base2m1">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_base2m1">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran_joint1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_joint1">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran_joint2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_joint2">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Force and torque sensor -->
  <gazebo reference="joint1">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_ft_sensor.so" name="ft_sensor">
      <updateRate>100.0</updateRate>
      <topicName>/tracked/ft_sensor_joint1</topicName>
      <jointName>joint1</jointName>
    </plugin>
  </gazebo>
  <gazebo reference="joint2">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_ft_sensor.so" name="ft_sensor">
      <updateRate>100.0</updateRate>
      <topicName>/tracked/ft_sensor_joint2</topicName>
      <jointName>joint2</jointName>
    </plugin>
  </gazebo>
  <!--  <xacro:include filename="$(find tracked_description)/urdf/gazebo/tracked_arm_revolute_effort.xacro" />-->
  <!-- fake crawler xacro files-->
  <!-- This model is not completed-->
  <!--  <xacro:include filename="$(find tracked_description)/urdf/gazebo/tracked_wheel.xacro" />-->
  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>
  <joint name="world2base" type="floating">
    <parent link="world"/>
    <child link="base"/>
  </joint>
  <!-- Base Link -->
  <link name="base">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/main_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/main_a.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="30"/>
      <inertia ixx="0.219237688" ixy="0.0" ixz="0.0" iyy="0.220820092" iyz="0.0" izz="0.393582403"/>
    </inertial>
  </link>
  <joint name="base2FL" type="continuous">
    <parent link="base"/>
    <child link="FL"/>
    <origin rpy="0 0 0" xyz="0.1 0.16 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>
  <link name="FL">
    <collision>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.000907922" ixy="0.0" ixz="0.0" iyy="0.007360669" iyz="0.0" izz="0.006719413"/>
    </inertial>
  </link>
  <joint name="base2RL" type="continuous">
    <parent link="base"/>
    <child link="RL"/>
    <origin rpy="0 0 0" xyz="-0.1 0.16 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>
  <link name="RL">
    <collision>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.000907922" ixy="0.0" ixz="0.0" iyy="0.007360669" iyz="0.0" izz="0.006719413"/>
    </inertial>
  </link>
  <joint name="base2FR" type="continuous">
    <parent link="base"/>
    <child link="FR"/>
    <origin rpy="0 0 0" xyz="0.1 -0.16 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>
  <link name="FR">
    <collision>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.000907922" ixy="0.0" ixz="0.0" iyy="0.007360669" iyz="0.0" izz="0.006719413"/>
    </inertial>
  </link>
  <joint name="base2RR" type="continuous">
    <parent link="base"/>
    <child link="RR"/>
    <origin rpy="0 0 0" xyz="-0.1 -0.16 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>
  <link name="RR">
    <collision>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/flipper_a.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.1 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.000907922" ixy="0.0" ixz="0.0" iyy="0.007360669" iyz="0.0" izz="0.006719413"/>
    </inertial>
  </link>
  <joint name="base2hokuyo" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.0866666666667 0 0.08"/>
    <parent link="base"/>
    <child link="hokuyo"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="hokuyo">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tracked_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
  </link>
  <transmission name="tran_base2FL">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base2FL">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_base2FL">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran_base2RL">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base2RL">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_base2RL">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran_base2FR">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base2FR">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_base2FR">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran_base2RR">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base2RR">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_base2RR">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

